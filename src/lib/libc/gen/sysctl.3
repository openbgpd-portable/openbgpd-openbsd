.\"	$OpenBSD: sysctl.3,v 1.173 2007/08/14 18:27:35 cnst Exp $
.\"
.\" Copyright (c) 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: August 14 2007 $
.Dt SYSCTL 3
.Os
.Sh NAME
.Nm sysctl
.Nd get or set system information
.Sh SYNOPSIS
.Fd #include <sys/param.h>
.Fd #include <sys/sysctl.h>
.Ft int
.Fn sysctl "int *name" "u_int namelen" "void *oldp" "size_t *oldlenp" "void *newp" "size_t newlen"
.Sh DESCRIPTION
The
.Fn sysctl
function retrieves system information and allows processes with
appropriate privileges to set system information.
The information available from
.Fn sysctl
consists of integers, strings, and tables.
Information may be retrieved and set from the command interface
using the
.Xr sysctl 8
utility.
.Pp
Unless explicitly noted below,
.Fn sysctl
returns a consistent snapshot of the data requested.
Consistency is obtained by locking the destination
buffer into memory so that the data may be copied out without blocking.
Calls to
.Fn sysctl
are serialized to avoid deadlock.
.Pp
The state is described using a
.Dq Management Information Base (MIB)
style name, listed in
.Fa name ,
which is a
.Fa namelen
length array of integers.
.Pp
The information is copied into the buffer specified by
.Fa oldp .
The size of the buffer is given by the location specified by
.Fa oldlenp
before the call,
and that location gives the amount of data copied after a successful call.
If the amount of data available is greater
than the size of the buffer supplied,
the call supplies as much data as fits in the buffer provided
and returns with the error code
.Er ENOMEM .
If the old value is not desired,
.Fa oldp
and
.Fa oldlenp
should be set to
.Dv NULL .
.Pp
The size of the available data can be determined by calling
.Fn sysctl
with a
.Dv NULL
parameter for
.Fa oldp .
The size of the available data will be returned in the location pointed to by
.Fa oldlenp .
For some operations, the amount of space may change often.
For these operations,
the system attempts to round up so that the returned size is
large enough for a call to return the data shortly thereafter.
.Pp
To set a new value,
.Fa newp
is set to point to a buffer of length
.Fa newlen
from which the requested value is to be taken.
If a new value is not to be set,
.Fa newp
should be set to
.Dv NULL
and
.Fa newlen
set to 0.
.Pp
The top level names are defined with a
.Dv CTL_
prefix in
.Aq Pa sys/sysctl.h ,
and are as follows.
The next and subsequent levels down are found in the include files
listed here, and described in separate sections below.
.Bl -column CTLXMACHDEPXXX "Next level namesXXXXXX" -offset indent
.It Sy Name	Next level names	Description
.It Dv CTL_DDB No "	ddb/db_var.h	Kernel debugger"
.It Dv CTL_DEBUG No "	sys/sysctl.h	Debugging"
.It Dv CTL_FS No "	sys/sysctl.h	File system"
.It Dv CTL_HW No "	sys/sysctl.h	Generic CPU, I/O"
.It Dv CTL_KERN No "	sys/sysctl.h	High kernel limits"
.It Dv CTL_MACHDEP No "	sys/sysctl.h	Machine dependent"
.It Dv CTL_NET No "	sys/socket.h	Networking"
.It Dv CTL_USER No "	sys/sysctl.h	User-level"
.It Dv CTL_VFS No "	ufs/ffs/ffs_extern.h	Virtual file system"
.It Dv CTL_VM No "	uvm/uvm_param.h	Virtual memory"
.El
.Pp
For example, the following retrieves the maximum number of processes allowed
in the system:
.Bd -literal -offset indent
int mib[2], maxproc;
size_t len;

mib[0] = CTL_KERN;
mib[1] = KERN_MAXPROC;
len = sizeof(maxproc);
if (sysctl(mib, 2, &maxproc, &len, NULL, 0) == -1)
	err(1, "sysctl");
.Ed
.Pp
To retrieve the standard search path for the system utilities:
.Bd -literal -offset indent
int mib[2];
size_t len;
char *p;

mib[0] = CTL_USER;
mib[1] = USER_CS_PATH;
if (sysctl(mib, 2, NULL, &len, NULL, 0) == -1)
	err(1, "sysctl");
if ((p = malloc(len)) == NULL)
	err(1, NULL);
if (sysctl(mib, 2, p, &len, NULL, 0) == -1)
	err(1, "sysctl");
.Ed
.Ss CTL_DDB
Integer information and settable variables are available for the
.Dv CTL_DDB level ,
as described below.
More information is also available in
.Xr ddb 4 .
.Bl -column "Second level nameXXXXXX" "struct loadavgXXX" -offset indent
.It Sy Second level name	Type	Changeable
.It Dv DBCTL_CONSOLE No "	integer	yes"
.It Dv DBCTL_LOG No "	integer	yes"
.It Dv DBCTL_MAXLINE No "	integer	yes"
.It Dv DBCTL_MAXWIDTH No "	integer	yes"
.It Dv DBCTL_PANIC No "	integer	yes"
.It Dv DBCTL_RADIX No "	integer	yes"
.It Dv DBCTL_TABSTOP No "	integer	yes"
.El
.Bl -tag -width "123456"
.It Dv DBCTL_CONSOLE
When this variable is set, an architecture dependent magic key sequence
on the console or a debugger button will permit entry into the kernel debugger.
When running with a
.Xr securelevel 7
greater than 0,
this variable may not be raised.
.It Dv DBCTL_LOG
When set, ddb output is also logged in the kernel message buffer.
.It Dv DBCTL_MAXLINE
Determines the number of lines to page in
.Xr ddb 4 .
This variable is also available as the ddb
.Dv $lines
variable.
.It Dv DBCTL_MAXWIDTH
Determines the maximum width of a line in
.Xr ddb 4 .
This variable is also available as the ddb
.Dv $maxwidth
variable.
.It Dv DBCTL_PANIC
When this variable is set, system panics may drop into the kernel debugger.
When running with a
.Xr securelevel 7
greater than 0,
this variable may not be raised.
.It Dv DBCTL_RADIX
Determines the default radix or base for non-prefixed numbers
entered into
.Xr ddb 4 .
This variable is also available as the ddb
.Dv $radix
variable.
.It Dv DBCTL_TABSTOP
Width of a tab stop in
.Xr ddb 4 .
This variable is also available as the ddb
.Dv $tabstops
variable.
.El
.Ss CTL_DEBUG
The debugging variables vary from system to system.
A debugging variable may be added or deleted without need to recompile
.Fn sysctl
to know about it.
Each time it runs,
.Fn sysctl
gets the list of debugging variables from the kernel and
displays their current values.
The system defines twenty
.Li struct ctldebug
variables named
.Va debug0
through
.Va debug19 .
They are declared as separate variables so that they can be
individually initialized at the location of their associated variable.
The loader prevents multiple use of the same variable by issuing errors
if a variable is initialized in more than one place.
For example, to export the variable
.Va dospecialcheck
as a debugging variable, the following declaration would be used:
.Bd -literal -offset indent
int dospecialcheck = 1;
struct ctldebug debug5 = { "dospecialcheck", &dospecialcheck };
.Ed
.Ss CTL_FS
The string and integer information available for the
.Dv CTL_FS
level is detailed below.
The changeable column shows whether a process with appropriate
privileges may change the value.
.Bl -column "Second level nameXXXXXX" integerXXX -offset indent
.It Sy Second level name	Type	Changeable
.It Dv FS_POSIX_SETUID No "	integer	yes"
.El
.Bl -tag -width "123456"
.It Dv FS_POSIX_SETUID
When this variable is set, ownership changes on a file will cause
the
.Va S_ISUID
and
.Va S_ISGID
bits to be cleared.
As detailed in
.Xr securelevel 7 ,
this variable may not be changed if the securelevel is \*(Gt 0.
.El
.Ss CTL_HW
The string and integer information available for the
.Dv CTL_HW
level is detailed below.
The changeable column shows whether a process with appropriate
privileges may change the value.
.Bl -column "Second level nameXXXXXX" integerXXX -offset indent
.It Sy Second level name	Type	Changeable
.It Dv HW_BYTEORDER No "	integer	no"
.It Dv HW_CPUSPEED No "	integer	no"
.It Dv HW_DISKCOUNT No "	integer	no"
.It Dv HW_DISKNAMES No "	string	no"
.It Dv HW_DISKSTATS No "	struct	no"
.It Dv HW_MACHINE No "	string	no"
.It Dv HW_MODEL No "	string	no"
.It Dv HW_NCPU No "	integer	no"
.It Dv HW_PAGESIZE No "	integer	no"
.It Dv HW_PHYSMEM No "	integer	no"
.It Dv HW_PRODUCT No "	string	no"
.It Dv HW_SENSORS No "	node	not applicable"
.It Dv HW_SERIALNO No "	string	no"
.It Dv HW_SETPERF No "	integer	yes"
.It Dv HW_USERMEM No "	integer	no"
.It Dv HW_UUID No "	string	no"
.It Dv HW_VENDOR No "	string	no"
.It Dv HW_VERSION No "	string	no"
.El
.Bl -tag -width "123456"
.It Dv HW_BYTEORDER
The byteorder (4321 or 1234).
.It Dv HW_CPUSPEED
The current CPU frequency
.Pq in MHz .
.It Dv HW_DISKCOUNT
The number of disks currently attached to the system.
.It Dv HW_DISKNAMES
A comma-separated list of disk names.
.It Dv HW_DISKSTATS
An array of
.Li struct diskstats
structures containing disk statistics.
.It Dv HW_MACHINE
The machine class.
.It Dv HW_MODEL
The machine model.
.It Dv HW_NCPU
The number of CPUs.
.It Dv HW_PAGESIZE
The software page size.
.It Dv HW_PHYSMEM
The total physical memory, in bytes.
.It Dv HW_PRODUCT
The product name of the machine.
.It Dv HW_SENSORS
Third level comprises an array of
.Li struct sensordev
structures containing information about devices
that may attach hardware monitoring sensors.
.Pp
Third, fourth and fifth levels together comprise an array of
.Li struct sensor
structures containing snapshot readings of hardware monitoring sensors.
In such usage, third level indicates the numerical representation
of the sensor device name to which the sensor is attached
(a device's xname and number are matched with the help of
.Li struct sensordev
structure above),
fourth level indicates sensor type and
fifth level is an ordinal sensor number (unique to
the specified sensor type on the specified sensor device).
.Pp
The
.Sy sensordev
and
.Sy sensor
structures
and
.Sy sensor_type
enumeration
are defined in
.Aq Pa sys/sensors.h .
.It Dv HW_SERIALNO
The serial number of the machine.
.It Dv HW_SETPERF
Current CPU performance
.Pq percentage .
.It Dv HW_USERMEM
The amount of available non-kernel memory in bytes.
.It Dv HW_UUID
The universal unique identification number assigned to the machine.
.It Dv HW_VENDOR
The vendor name for this machine.
.It Dv HW_VERSION
The version or revision of this machine.
.El
.Ss CTL_KERN
The string and integer information available for the
.Dv CTL_KERN
level is detailed below.
The changeable column shows whether a process with appropriate
privileges may change the value.
The types of data currently available are process information,
system vnodes, the open file entries, routing table entries,
virtual memory statistics, load average history, and clock rate
information.
.Bl -column "KERNXCRYPTODEVALLOWSOFTXXX" "struct clockrateXXX" -offset indent
.It Sy Second level name	Type	Changeable
.It Dv KERN_ARGMAX No "	integer	no"
.It Dv KERN_ARND No "	char[]	no"
.It Dv KERN_BOOTTIME No "	struct timeval	no"
.It Dv KERN_CCPU No "	integer	no"
.It Dv KERN_CLOCKRATE No "	struct clockinfo	no"
.It Dv KERN_CPTIME No "	long[CPUSTATES]	no"
.It Dv KERN_CPTIME2 No "	u_int64_t[CPUSTATES]	no"
.It Dv KERN_CRYPTODEVALLOWSOFT No "	integer	yes"
.It Dv KERN_DOMAINNAME No "	string	yes"
.It Dv KERN_EMUL No "	node	not applicable"
.It Dv KERN_FILE No "	struct file	no"
.It Dv KERN_FORKSTAT No "	struct forkstat	no"
.It Dv KERN_FSCALE No "	integer	no"
.It Dv KERN_FSYNC No "	integer	no"
.It Dv KERN_HOSTID No "	integer	yes"
.It Dv KERN_HOSTNAME No "	string	yes"
.It Dv KERN_INTRCNT No "	node	not applicable"
.It Dv KERN_JOB_CONTROL No "	integer	no"
.It Dv KERN_MALLOCSTATS No "	node	no"
.It Dv KERN_MAXCLUSTERS No "	integer	yes"
.It Dv KERN_MAXFILES No "	integer	yes"
.It Dv KERN_MAXPARTITIONS No "	integer	no"
.It Dv KERN_MAXPROC No "	integer	yes"
.It Dv KERN_MAXVNODES No "	integer	yes"
.It Dv KERN_MBSTAT No "	struct mbstat	no"
.It Dv KERN_MSGBUF No "	char[]	no"
.It Dv KERN_MSGBUFSIZE No "	integer	no"
.It Dv KERN_NCHSTATS No "	struct nchstats	no"
.It Dv KERN_NFILES No "	integer	no"
.It Dv KERN_NGROUPS No "	integer	no"
.It Dv KERN_NOSUIDCOREDUMP No "	integer	yes"
.It Dv KERN_NPROCS No "	integer	no"
.It Dv KERN_NSELCOLL No "	integer	no"
.It Dv KERN_NUMVNODES No "	integer	no"
.It Dv KERN_OSRELEASE No "	string	no"
.It Dv KERN_OSREV No "	integer	no"
.It Dv KERN_OSTYPE No "	string	no"
.It Dv KERN_OSVERSION No "	string	no"
.It Dv KERN_POSIX1 No "	integer	no"
.It Dv KERN_PROC No "	struct kinfo_proc	no"
.It Dv KERN_PROC2 No "	struct kinfo_proc2	no"
.It Dv KERN_PROC_ARGS No "	node	not applicable"
.It Dv KERN_PROF No "	node	not applicable"
.It Dv KERN_RAWPARTITION No "	integer	no"
.It Dv KERN_RND No "	struct rndstats	no"
.It Dv KERN_SAVED_IDS No "	integer	no"
.It Dv KERN_SECURELVL No "	integer	raise only"
.It Dv KERN_SEMINFO No "	node	not applicable"
.It Dv KERN_SHMINFO No "	node	not applicable"
.It Dv KERN_SOMAXCONN No "	integer	yes"
.It Dv KERN_SOMINCONN No "	integer	yes"
.It Dv KERN_SPLASSERT No "	int	yes"
.It Dv KERN_STACKGAPRANDOM No "	integer	yes"
.It Dv KERN_SYSVIPC_INFO No "	node	not applicable"
.It Dv KERN_SYSVMSG No "	integer	no"
.It Dv KERN_SYSVSEM No "	integer	no"
.It Dv KERN_SYSVSHM No "	integer	no"
.It Dv KERN_TIMECOUNTER No "	node	not applicable"
.It Dv KERN_TTY No "	node	not applicable"
.It Dv KERN_TTYCOUNT No "	integer	no"
.It Dv KERN_USERASYMCRYPTO No "	integer	yes"
.It Dv KERN_USERCRYPTO No "	integer	yes"
.It Dv KERN_USERMOUNT No "	integer	yes"
.It Dv KERN_VERSION No "	string	no"
.It Dv KERN_VNODE No "	struct e_vnode	no"
.It Dv KERN_WATCHDOG No "	node	not applicable"
.El
.Bl -tag -width "123456"
.It Dv KERN_ARGMAX
The maximum number of bytes allowed among the arguments to
.Xr exec 3 .
.It Dv KERN_ARND
Returns a maximum of 256 random bytes from the kernel using the
.Xr arc4random 9
function.
This can be useful if
.Pa /dev/arandom
is not available (see
.Xr random 4 ) .
.It Dv KERN_BOOTTIME
A
.Li struct timeval
structure is returned.
This structure contains the time that the system was booted.
.It Dv KERN_CCPU
The scheduler exponential decay value.
.It Dv KERN_CLOCKRATE
A
.Li struct clockinfo
structure is returned.
This structure contains the clock, statistics clock and profiling clock
frequencies, the number of micro-seconds per hz tick, and the clock
skew rate.
.It Dv KERN_CPTIME
An array of longs of size
.Li CPUSTATES
is returned, containing statistics about the number of ticks spent by
the system among all processors in interrupt processing,
user processes
.Po
.Xr nice 1
or normal
.Pc ,
system processing, or idling.
.It Dv KERN_CPTIME2
Similar to
.Dv KERN_CPTIME ,
but obtains information from only the single CPU specified by the
third level name given.
.It Dv KERN_CRYPTODEVALLOWSOFT
Permits userland to use
.Pa /dev/crypto
even if there is no hardware crypto accelerator in the system.
.It Dv KERN_DOMAINNAME
Get or set the YP domain name.
.It Dv KERN_EMUL
Enable binary emulation.
.Bl -column "KERN_EMUL_FREEBSD" "string" -offset indent
.It Sy Third level name	Type	Changeable
.It Dv KERN_EMUL_ENABLED No "	integer	yes"
.It Dv KERN_EMUL_NAME No "	string	no"
.It Dv KERN_EMUL_NEMULS No "	integer	no"
.El
.Pp
Third level names in
.Dv KERN_EMUL
other than
.Dv KERN_EMUL_NEMULS
refer to a specific emulation available in the kernel.
Valid values range from 1 to the return value of
.Dv KERN_EMUL_NEMULS .
The fourth level names available are
.Dv KERN_EMUL_NAME ,
which returns a string with the emulation name, and
.Dv KERN_EMUL_ENABLED ,
which is an adjustable integer.
.Pp
Note that using this interface exposes duplicate entries which are
consolidated by the userland frontend.
.It Dv KERN_FILE
Return the entire file table.
The returned data consists of a single
.Li struct filehead
followed by an array of
.Li struct file ,
whose size depends on the current number of such objects in the system.
.It Dv KERN_FORKSTAT
A
.Li struct forkstat
structure is returned.
This structure contains information about the number of
.Xr fork 2 ,
.Xr vfork 2 ,
and
.Xr rfork 2
system calls as well as kernel thread creations since system startup,
and the number of pages of virtual memory involved in each.
.It Dv KERN_FSCALE
The kernel fixed-point scale factor.
.It Dv KERN_FSYNC
Return 1 if the File Synchronisation Option is available on this system,
otherwise 0.
.It Dv KERN_HOSTID
Get or set the host ID.
.It Dv KERN_HOSTNAME
Get or set the hostname.
.It Dv KERN_JOB_CONTROL
Return 1 if job control is available on this system, otherwise 0.
.It Dv KERN_MALLOCSTATS
Return kernel memory bucket statistics.
The third level names are detailed below.
There are no changeable values in this branch.
.Bl -column "KERN_MALLOC_KMEMNAMES" "string" -offset indent
.It Sy Third level name		Type
.It Dv KERN_MALLOC_BUCKET No "		node"
.It Dv KERN_MALLOC_BUCKETS No "		string"
.It Dv KERN_MALLOC_KMEMNAMES No "		string"
.It Dv KERN_MALLOC_KMEMSTATS No "		node"
.El
.Pp
The variables are as follows:
.Bl -tag -width "123456"
.It Dv KERN_MALLOC_BUCKET.\*(Ltsize\*(Gt
A node containing the statistics for the memory bucket of the
specified size (in decimal notation, the number of bytes per bucket
element, e.g., 16, 32, 128).
Each node returns a
.Li struct kmembuckets .
.Pp
If a value is specified that does not correspond directly to a
bucket size, the statistics for the closest larger bucket size will be
returned instead.
.Pp
Note that bucket sizes are typically powers of 2.
.It Dv KERN_MALLOC_BUCKETS
Return a comma-separated list of the bucket sizes used by the kernel.
.It Dv KERN_MALLOC_KMEMNAMES
Return a comma-separated list of the names of the kernel
.Xr malloc 9
types.
.It Dv KERN_MALLOC_KMEMSTATS
A node containing the statistics for the memory types of the specified
name.
Each node returns a
.Li struct kmemstats .
.El
.It Dv KERN_MAXCLUSTERS
The maximum number of
.Xr mbuf 9
clusters that may be allocated.
.It Dv KERN_MAXFILES
The maximum number of open files that may be open in the system.
.It Dv KERN_MAXPARTITIONS
The maximum number of partitions allowed per disk.
.It Dv KERN_MAXPROC
The maximum number of simultaneous processes the system will allow.
.It Dv KERN_MAXVNODES
The maximum number of vnodes available on the system.
.It Dv KERN_MBSTAT
A
.Li struct mbstat
structure is returned, containing statistics on
.Xr mbuf 9
usage.
.It Dv KERN_MSGBUF
Returns a buffer containing kernel log messages.
.It Dv KERN_MSGBUFSIZE
The size of the kernel message buffer.
.It Dv KERN_NCHSTATS
A
.Li struct nchstats
structure is returned.
This structure contains information about the
filename to
.Xr inode 5
mapping cache.
.It Dv KERN_NFILES
Number of open files.
.It Dv KERN_NGROUPS
The maximum number of supplemental groups.
.It Dv KERN_NOSUIDCOREDUMP
Programs with their set-user-ID bit set will not dump core when this is set.
The special value of 2 means that core dumps will be allowed, but placed
in
.Pa /var/crash .
.It Dv KERN_NPROCS
The number of entries in the kernel process table.
.It Dv KERN_NSELCOLL
Number of
.Xr select 2
collisions.
.It Dv KERN_NUMVNODES
Number of vnodes in use.
.It Dv KERN_OSRELEASE
The system release string.
.It Dv KERN_OSREV
The system revision number.
.It Dv KERN_OSTYPE
The system type string.
.It Dv KERN_OSVERSION
The kernel build version.
.It Dv KERN_POSIX1
The version of ISO/IEC 9945 (POSIX 1003.1) with which the system
attempts to comply.
.It Dv KERN_PROC
Return the entire process table, or a subset of it.
An array of
.Li struct kinfo_proc
structures is returned,
whose size depends on the current number of such objects in the system.
The third and fourth level names are as follows:
.Bl -column "Third level nameXXXXXX" "Fourth level is:XXXXXX" -offset indent
.It Sy Third level name	Fourth level is:
.It Dv KERN_PROC_ALL No "	None"
.It Dv KERN_PROC_KTHREAD No "	A kernel thread"
.It Dv KERN_PROC_PID No "	A process ID"
.It Dv KERN_PROC_PGRP No "	A process group"
.It Dv KERN_PROC_RUID No "	A real user ID"
.It Dv KERN_PROC_SESSION No "	A session PID"
.It Dv KERN_PROC_TTY No "	A tty device"
.It Dv KERN_PROC_UID No "	A user ID"
.El
.It Dv KERN_PROC2
Like
.Dv KERN_PROC
but an array of
.Li struct kinfo_proc2
structures is returned.
The fifth level name is the size of the
.Li struct kinfo_proc2
and the sixth level name is the number of structures to return.
.It Dv KERN_PROC_ARGS
Returns the arguments or environment of a process.
The third level name is the PID of the process.
The fourth level name is one of:
.Bl -column KERN_PROC_NARGVXXX -offset indent
.It Dv KERN_PROC_ARGV
.It Dv KERN_PROC_ENV
.It Dv KERN_PROC_NARGV
.It Dv KERN_PROC_NENV
.El
.Pp
.Dv KERN_PROC_NARGV
and
.Dv KERN_PROC_NENV
return the number of elements as an
.Vt int
in the argv or env array.
.Dv KERN_PROC_ARGV
returns the argv array and
.Dv KERN_PROC_ENV
returns the environ array.
.It Dv KERN_PROF
Return profiling information about the kernel.
If the kernel is not compiled for profiling,
attempts to retrieve any of the
.Dv KERN_PROF
values will fail with
.Er EOPNOTSUPP .
The third level names for the string and integer profiling information
are detailed below.
The changeable column shows whether a process with appropriate
privileges may change the value.
.Bl -column "GPROFXGMONPARAMXXX" "struct gmonparamXXX" -offset indent
.It Sy Third level name	Type	Changeable
.It Dv GPROF_COUNT No "	u_short[]	yes"
.It Dv GPROF_FROMS No "	u_short[]	yes"
.It Dv GPROF_GMONPARAM No "	struct gmonparam	no"
.It Dv GPROF_STATE No "	integer	yes"
.It Dv GPROF_TOS No "	struct tostruct	yes"
.El
.Pp
The variables are as follows:
.Bl -tag -width "123456"
.It Dv GPROF_COUNT
Array of statistical program counter counts.
.It Dv GPROF_FROMS
Array indexed by program counter of call-from points.
.It Dv GPROF_GMONPARAM
Structure giving the sizes of the above arrays.
.It Dv GPROF_STATE
Returns
.Dv GMON_PROF_ON
or
.Dv GMON_PROF_OFF
to show that profiling is running or stopped.
.It Dv GPROF_TOS
Array of
.Li struct tostruct
describing destination of calls and their counts.
.El
.It Dv KERN_RAWPARTITION
The raw partition of a disk (a == 0).
.It Dv KERN_RND
Returns statistics about the
.Pa /dev/random
device in a
.Li struct rndstats
structure.
.It Dv KERN_SAVED_IDS
Returns 1 if saved set-group-ID and saved set-user-ID are available.
.It Dv KERN_SECURELVL
The system security level.
This level may be raised by processes with appropriate privileges.
It may only be lowered by process 1.
.It Dv KERN_SEMINFO
Return the elements of
.Li struct seminfo .
If the kernel is not compiled with System V style semaphore support,
attempts to retrieve any of the
.Dv KERN_SEMINFO
values will fail with
.Er EOPNOTSUPP .
The third level names for the elements of
.Li struct seminfo
are detailed below.
The changeable column shows whether a process with appropriate
privileges may change the value.
.Bl -column "KERN_SEMINFO_SEMMNI" "integer" "yes" -offset indent
.It Sy "Third level name"	Type	Changeable
.It Dv KERN_SEMINFO_SEMAEM No "	integer	no"
.It Dv KERN_SEMINFO_SEMMNI No "	integer	yes"
.It Dv KERN_SEMINFO_SEMMNS No "	integer	yes"
.It Dv KERN_SEMINFO_SEMMNU No "	integer	yes"
.It Dv KERN_SEMINFO_SEMMSL No "	integer	yes"
.It Dv KERN_SEMINFO_SEMOPM No "	integer	yes"
.It Dv KERN_SEMINFO_SEMUME No "	integer	no"
.It Dv KERN_SEMINFO_SEMUSZ No "	integer	no"
.It Dv KERN_SEMINFO_SEMVMX No "	integer	no"
.El
.Pp
The variables are as follows:
.Bl -tag -width "123456"
.It Dv KERN_SEMINFO_SEMAEM
The adjust on exit maximum value.
.It Dv KERN_SEMINFO_SEMMNI
The maximum number of semaphore identifiers allowed.
.It Dv KERN_SEMINFO_SEMMNS
The maximum number of semaphores allowed in the system.
.It Dv KERN_SEMINFO_SEMMNU
The maximum number of semaphore undo structures allowed in the system.
.It Dv KERN_SEMINFO_SEMMSL
The maximum number of semaphores allowed per ID.
.It Dv KERN_SEMINFO_SEMOPM
The maximum number of operations per
.Xr semop 2
call.
.It Dv KERN_SEMINFO_SEMUME
The maximum number of undo entries per process.
.It Dv KERN_SEMINFO_SEMUSZ
The size (in bytes) of the undo structure.
.It Dv KERN_SEMINFO_SEMVMX
The semaphore maximum value.
.El
.It Dv KERN_SHMINFO
Return the elements of
.Li struct shminfo .
If the kernel is not compiled with System V style shared memory support,
attempts to retrieve any of the
.Dv KERN_SHMINFO
values will fail with
.Er EOPNOTSUPP .
The third level names for the elements of
.Li struct shminfo
are detailed below.
The changeable column shows whether a process with appropriate
privileges may change the value.
.Bl -column "KERN_SHMINFO_SHMMAX" "integer" "yes" -offset indent
.It Sy "Third level name"	Type	Changeable
.It Dv KERN_SHMINFO_SHMALL No "	integer	yes"
.It Dv KERN_SHMINFO_SHMMAX No "	integer	yes"
.It Dv KERN_SHMINFO_SHMMIN No "	integer	yes"
.It Dv KERN_SHMINFO_SHMMNI No "	integer	yes"
.It Dv KERN_SHMINFO_SHMSEG No "	integer	yes"
.El
.Pp
The variables are as follows:
.Bl -tag -width "123456"
.It Dv KERN_SHMINFO_SHMALL
The maximum amount of total shared memory allowed in the system (in pages).
.It Dv KERN_SHMINFO_SHMMAX
The maximum shared memory segment size (in bytes).
.It Dv KERN_SHMINFO_SHMMIN
The minimum shared memory segment size (in bytes).
.It Dv KERN_SHMINFO_SHMMNI
The maximum number of shared memory identifiers in the system.
.It Dv KERN_SHMINFO_SHMSEG
The maximum number of shared memory segments per process.
.El
.It Dv KERN_SOMAXCONN
Upper bound on the number of half-open connections a process can allow
to be associated with a socket, using
.Xr listen 2 .
The default value is 128.
.It Dv KERN_SOMINCONN
Lower bound on the number of half-open connections a process can allow
to be associated with a socket, using
.Xr listen 2 .
The default value is 80.
.It Dv KERN_SPLASSERT
Modify the system interrupt priority level.
Valid values are:
.Pp
.Bl -tag -width 3n -offset indent -compact
.It 0
Disable error checking.
.It 1
Print a message if an error is detected.
.It 2
Print a message if an error is detected,
and a stack trace if possible.
.It 3
The same as 2, but also drop into the kernel debugger.
.El
.Pp
Any other value causes a system panic on errors.
See
.Xr splassert 9
for more information.
.It Dv KERN_STACKGAPRANDOM
Sets the range of the random value added to the stack pointer on each
program execution.
The random value is added to make buffer overflow exploitation slightly
harder.
The bigger the number, the harder it is to brute force this added protection,
but it also means bigger waste of memory.
.It Li KERN_SYSVIPC_INFO
Return System V style IPC configuration and run-time information.
The third level name selects the System V style IPC facility.
.Bl -column "KERN_SYSVIPC_MSG_INFOXXX" "struct shm_sysctl_infoXXX" -offset indent
.It Sy Third level name	Type
.It Dv KERN_SYSVIPC_MSG_INFO No "	struct msg_sysctl_info"
.It Dv KERN_SYSVIPC_SEM_INFO No "	struct sem_sysctl_info"
.It Dv KERN_SYSVIPC_SHM_INFO No "	struct shm_sysctl_info"
.El
.Bl -tag -width "123456"
.It Dv KERN_SYSVIPC_MSG_INFO
Return information on the System V style message facility.
The
.Sy msg_sysctl_info
structure is defined in
.Aq Pa sys/msg.h .
.It Dv KERN_SYSVIPC_SEM_INFO
Return information on the System V style semaphore facility.
The
.Sy sem_sysctl_info
structure is defined in
.Aq Pa sys/sem.h .
.It Dv KERN_SYSVIPC_SHM_INFO
Return information on the System V style shared memory facility.
The
.Sy shm_sysctl_info
structure is defined in
.Aq Pa sys/shm.h .
.El
.It Dv KERN_SYSVMSG
Returns 1 if System V style message queue functionality is available on this
system, otherwise 0.
.It Dv KERN_SYSVSEM
Returns 1 if System V style semaphore functionality is available on this
system, otherwise 0.
.It Dv KERN_SYSVSHM
Returns 1 if System V style shared memory functionality is available on this
system, otherwise 0.
.It Dv KERN_TIMECOUNTER
Return statistics information about the kernel time counter.
The third level names information is detailed below.
The changeable column shows whether a process with appropriate
privileges may change the value.
.Bl -column "KERN_TIMECOUNTER_TIMESTEPWARNINGS" "integer" -offset indent
.It Sy Third level name	Type	Changeable
.It Dv KERN_TIMECOUNTER_CHOICE No "	string	no"
.It Dv KERN_TIMECOUNTER_HARDWARE No "	string	yes"
.It Dv KERN_TIMECOUNTER_TICK No "	integer	no"
.It Dv KERN_TIMECOUNTER_TIMESTEPWARNINGS No "	integer	yes"
.El
.Pp
The variables are as follows:
.Bl -tag -width "123456"
.It Dv KERN_TIMECOUNTER_CHOICE
Get the list of kernel time counter sources and their claimed
quality (higher is better).
.It Dv KERN_TIMECOUNTER_HARDWARE
Get or set the kernel time counter source by name.
.It Dv KERN_TIMECOUNTER_TICK
Get the number of times we have reset the kernel time counter
information.
.It Dv KERN_TIMECOUNTER_TIMESTEPWARNINGS
Get or set a flag to log a message when the kernel time is
stepped.
.El
.It Dv KERN_TTY
Return statistics information about tty input/output.
The third level names information is detailed below.
The changeable column shows whether a process with appropriate
privileges may change the value.
.Bl -column "KERN_TTY_TKRAWCCXXX" "int64_tXX" -offset indent
.It Sy Third level name	Type	Changeable
.It Dv KERN_TTY_INFO No "	struct itty	no"
.It Dv KERN_TTY_NPTYS No "	integer	no"
.It Dv KERN_TTY_MAXPTYS No "	integer	yes"
.It Dv KERN_TTY_TKCANCC No "	int64_t	no"
.It Dv KERN_TTY_TKNIN No "	int64_t	no"
.It Dv KERN_TTY_TKNOUT No "	int64_t	no"
.It Dv KERN_TTY_TKRAWCC No "	int64_t	no"
.El
.Pp
The variables are as follows:
.Bl -tag -width "123456"
.It Dv KERN_TTY_INFO
Returns an array of
.Li struct itty
structures containing tty statistics.
.It Dv KERN_TTY_MAXPTYS
The maximum number of
.Xr pty 4
devices supported by the kernel.
This is the upper bound on
.Dv KERN_TTY_NPTYS .
.It Dv KERN_TTY_NPTYS
The current number of
.Xr pty 4
devices allocated by the kernel.
.It Dv KERN_TTY_TKCANCC
Returns the number of input characters in canonical mode.
.It Dv KERN_TTY_TKNIN
Returns the number of input characters from a
.Xr tty 4 .
.It Dv KERN_TTY_TKNOUT
Returns the number of output characters on a
.Xr tty 4 .
.It Dv KERN_TTY_TKRAWCC
Returns the number of input characters in raw mode.
.El
.It Dv KERN_TTYCOUNT
Number of available
.Xr tty 4
devices.
.It Dv KERN_USERASYMCRYPTO
Permits userland to use
.Pa /dev/crypto
for cryptographic support for asymmetric (public) key operations via hardware
cryptographic devices.
.Dv KERN_USERCRYPTO
(see below) must also be set.
.It Dv KERN_USERCRYPTO
Permits userland to use
.Pa /dev/crypto
for cryptographic support via hardware cryptographic devices.
.It Dv KERN_USERMOUNT
Return non-zero if regular users can issue
.Xr mount 2
requests.
The default value is 0.
.It Dv KERN_VERSION
The system version string.
.It Dv KERN_VNODE
Return the entire vnode table.
Note, the vnode table is not necessarily a consistent snapshot of
the system.
The returned data consists of an array whose size depends on the
current number of such objects in the system.
Each element of the array contains the kernel address of a vnode
.Pq Li struct vnode *
followed by the vnode itself
.Pq Li struct vnode .
.It Dv KERN_WATCHDOG
Return information on hardware watchdog timers.
If the kernel does not support a hardware watchdog timer,
attempts to retrieve or set any of the
.Dv KERN_WATCHDOG
values will fail with
.Er EOPNOTSUPP .
.Bl -column "KERN_WATCHDOG_PERIOD" "integer" "yes" -offset indent
.It Sy "Third level name"	Type	Changeable
.It Dv KERN_WATCHDOG_AUTO No "	integer	yes"
.It Dv KERN_WATCHDOG_PERIOD No "	integer	yes"
.El
.Pp
The variables are as follows:
.Bl -tag -width "123456"
.It Dv KERN_WATCHDOG_AUTO
If set to 1, the kernel refreshes the watchdog timer periodically.
If set to 0, a userland process must ensure that the watchdog timer
gets refreshed by setting the
.Dv KERN_WATCHDOG_PERIOD
variable.
.It Dv KERN_WATCHDOG_PERIOD
The period of the watchdog timer in seconds.
Set to 0 to disable the watchdog timer.
.El
.El
.Ss CTL_MACHDEP
The set of variables defined is architecture dependent.
Most architectures define at least the following variables.
.Bl -column "CONSOLE_DEVICEXXX" "integerXXX" -offset indent
.It Sy Second level name	Type	Changeable
.It Dv CPU_CONSDEV No "	dev_t	no"
.El
.Ss CTL_NET
The string and integer information available for the
.Dv CTL_NET
level is detailed below.
The changeable column shows whether a process with appropriate
privileges may change the value.
.Bl -column "Second level nameXXXXXX" "routing messagesXXX" -offset indent
.It Sy Second level name	Type	Changeable
.It Dv PF_ROUTE No "	routing messages	no"
.It Dv PF_INET No "	IPv4 values	yes"
.It Dv PF_INET6 No "	IPv6 values	yes"
.It Dv PF_KEY No "	key management	yes"
.El
.Bl -tag -width "123456"
.It Dv PF_ROUTE
Return the entire routing table or a subset of it.
The data is returned as a sequence of routing messages (see
.Xr route 4
for the header file, format, and meaning).
The length of each message is contained in the message header.
.Pp
The third level name is a protocol number, which is currently always 0.
The fourth level name is an address family, which may be set to 0 to
select all address families.
The fifth and sixth level names are as follows:
.Bl -column "Fifth level nameXXXXXX" "Sixth level is:XXX" -offset indent
.It Sy Fifth level name	Sixth level is:
.It Dv NET_RT_DUMP No "	None"
.It Dv NET_RT_FLAGS No "	rtflags"
.It Dv NET_RT_IFLIST No "	None"
.It Dv NET_RT_STATS No "	None"
.El
.It Dv PF_INET
Get or set various global information about IPv4
.Pq Internet Protocol version 4 .
The third level name is the protocol.
The fourth level name is the variable name.
The currently defined protocols and names are:
.Bl -column "Protocol name" "ipsec-soft-bytes " "integer" -offset indent
.It Sy Protocol name	Variable name	Type	Changeable
.It ah	enable	integer	yes
.It bpf	bufsize	integer	yes
.It bpf	maxbufsize	integer	yes
.It carp	allow	integer	yes
.It carp	arpbalance	integer	yes
.It carp	log	integer	yes
.It carp	preempt	integer	yes
.It esp	enable	integer	yes
.It esp	udpencap	integer	yes
.It esp	udpencap_port	integer	yes
.It etherip	allow	integer	yes
.It gre	allow	integer	yes
.It gre	wccp	integer	yes
.It icmp	bmcastecho	integer	yes
.It icmp	errppslimit	integer	yes
.It icmp	maskrepl	integer	yes
.It icmp	rediraccept	integer	yes
.It icmp	redirtimeout	integer	yes
.It icmp	tstamprepl	integer	yes
.It ip	directed-broadcast	integer	yes
.It ip	encdebug	integer	yes
.It ip	forwarding	integer	yes
.It ip	ipsec-allocs	integer	yes
.It ip	ipsec-auth-alg	string	yes
.It ip	ipsec-bytes	integer	yes
.It ip	ipsec-comp-alg	string	yes
.It ip	ipsec-enc-alg	string	yes
.It ip	ipsec-expire-acquire	integer	yes
.It ip	ipsec-firstuse	integer	yes
.It ip	ipsec-invalid-life	integer	yes
.It ip	ipsec-pfs	integer	yes
.It ip	ipsec-soft-allocs	integer	yes
.It ip	ipsec-soft-bytes	integer	yes
.It ip	ipsec-soft-firstuse	integer	yes
.It ip	ipsec-soft-timeout	integer	yes
.It ip	ipsec-timeout	integer	yes
.It ip	maxqueue	integer	yes
.It ip	mforwarding	integer	yes
.It ip	mtudisc	integer	yes
.It ip	mtudisctimeout	integer	yes
.It ip	multipath	integer	yes
.It ip	portfirst	integer	yes
.It ip	porthifirst	integer	yes
.It ip	porthilast	integer	yes
.It ip	portlast	integer	yes
.It ip	redirect	integer	yes
.It ip	sourceroute	integer	yes
.It ip	ttl	integer	yes
.It ipcomp	enable	integer	yes
.It ipip	allow	integer	yes
.It mobileip	allow	integer	yes
.It tcp	ackonpush	integer	yes
.It tcp	baddynamic	array	yes
.It tcp	ecn	integer	yes
.It tcp	ident	structure	no
.It tcp	keepidle	integer	yes
.It tcp	keepinittime	integer	yes
.It tcp	keepintvl	integer	yes
.It tcp	mssdflt	integer	yes
.It tcp	reasslimit	integer	yes
.It tcp	recvspace	integer	yes
.It tcp	rfc1323	integer	yes
.It tcp	rfc3390	integer	yes
.It tcp	rstppslimit	integer	yes
.It tcp	sack	integer	yes
.It tcp	sendspace	integer	yes
.It tcp	slowhz	integer	no
.It tcp	synbucketlimit	integer	yes
.It tcp	syncachelimit	integer	yes
.It udp	baddynamic	array	yes
.It udp	checksum	integer	yes
.It udp	recvspace	integer	yes
.It udp	sendspace	integer	yes
.El
.Pp
The variables are as follows:
.Bl -tag -width "123456"
.It Li ah.enable
If set to 1, enable the Authentication Header
.Pq AH
IPsec protocol.
Enabled by default.
See
.Xr ipsec 4
for more information.
.It Li bpf.bufsize
The initial size of
.Xr bpf 4
buffers.
.It Li bpf.maxbufsize
The maximum size a user may request a
.Xr bpf 4
buffer to be.
.It Li carp.allow
If set to 0, incoming
.Xr carp 4
packets will not be processed.
If set to any other value, processing will occur.
Enabled by default.
.It Li carp.arpbalance
If set to any value other than 0, the ARP balancing functionality of
.Xr carp 4
is enabled.
When ARP requests are received for an IP address which is part of any virtual
host, carp will hash the source IP in the ARP request to select one of the
virtual hosts from the set of all the virtual hosts which have that IP address.
The master of that host will respond with the correct virtual MAC address.
Disabled by default.
.It Li carp.log
If set to any value other than 0,
.Xr carp 4
will log errors.
Disabled by default.
.It Li carp.preempt
If set to 0,
.Xr carp 4
will not attempt to become master if it is receiving advertisements from
another active master.
If set to any other value, carp will become master of the virtual host if it
believes it can send advertisements more frequently than the current master.
Disabled by default.
.It Li esp.enable
If set to 1, enable the Encapsulating Security Payload
.Pq ESP
IPsec protocol.
Enabled by default.
See
.Xr ipsec 4
for more information.
.It Li esp.udpencap
If set to 1, enable processing of UDP encapsulated ESP packets.
Enabled by default.
.It Li esp.udpencap_port
Contains the value of the UDP port that triggers
decapsulation for incoming UDP encapsulated ESP packets.
The default port is 4500.
.It Li etherip.allow
If set to 0, incoming Ethernet-in-IPv4 packets will not be processed.
If set to any other value, processing will occur.
.It Li gre.allow
If set to 0, incoming GRE packets will not be processed.
If set to any other value, processing will occur.
.It Li gre.wccp
If set to 0, incoming WCCPv1-style GRE packets will not be processed.
If set to any other value, and gre.allow allows GRE packet processing,
WCCPv1-style GRE packets will be processed.
.It Li icmp.bmcastecho
If set to 1, respond to ICMP echo requests destined for
broadcast and multicast addresses.
Note, enabling this could open a system to a type of denial of service attack
called
.Qq smurfing ,
and is thus not advised.
.It Li icmp.errppslimit
This variable specifies the maximum number of outgoing ICMP error messages
per second.
ICMP error messages exceeding this value are subject to rate limitation
and will not go out from the node.
A negative value disables rate limitation.
.It Li icmp.maskrepl
Returns 1 if
.Tn ICMP
network mask requests are to be answered.
.It Li icmp.rediraccept
If set to non-zero, the host will accept ICMP redirect packets.
Note that routers will never accept ICMP redirect packets,
and the variable is meaningful on IP hosts only.
.It Li icmp.redirtimeout
This variable specifies the lifetime of routing entries generated by incoming
ICMP redirects.
The default timeout is 10 minutes.
.It Li icmp.tstamprepl
If set to 1, reply to ICMP timestamp requests.
If set to 0, ignore timestamp requests.
.It Li ip.directed-broadcast
Returns 1 if directed broadcast behavior is enabled for the host.
.It Li ip.encdebug
Returns 1 when error message reporting is enabled for the host.
If the kernel has been compiled with the
.Dv ENCDEBUG
option,
then debugging information will also be reported when this variable is set.
.It Li ip.forwarding
If set to 1, then
.Tn IP
forwarding is enabled for the host,
indicating the host is acting as a router.
If set to 2, then
.Tn IP
forwarding is restricted to traffic that has
been IPsec encapsulated or decapsulated by
the host.
The default value is 0.
.It Li ip.ipsec-allocs
The number of IPsec flows that can use a security association before
it expires.
If set to less than or equal to zero, the security association will not
expire because of this counter.
The default value is 0.
.It Li ip.ipsec-auth-alg
This is the default authentication algorithm the kernel will instruct
key management daemons to negotiate when establishing security
associations on behalf of the kernel.
Such security associations can occur as a result of a process having
requested some security level through
.Xr setsockopt 2 ,
or as a result of dynamic VPN entries.
Supported values are hmac-md5, hmac-sha1, and hmac-ripemd160.
If set to any other value, it is left to the key management daemons to
select an authentication algorithm for the security association.
The default value is hmac-sha1.
.It Li ip.ipsec-bytes
The number of bytes that will be processed by a security association
before it expires.
If set to less than or equal to zero, the security association will not
expire because of this counter.
The default value is 0.
.It Li ip.ipsec-comp-alg
The compression algorithm to use with an IP Compression Association
.Pq IPCA .
Possible values are
.Dq deflate
and
.Dq lzs .
Note that lzs is only available with
.Xr hifn 4 .
See
.Xr ipsecctl 8
for more information.
.It Li ip.ipsec-enc-alg
This is the default encryption algorithm the kernel will instruct key
management daemons to negotiate when establishing security
associations on behalf of the kernel.
Such security associations can occur as a result of a process having
requested some security level through
.Xr setsockopt 2 ,
or as a result of dynamic VPN entries.
Supported values are aes, des, 3des, blowfish, cast128, and skipjack.
If set to any other value, it is left to the key management daemons to
select an encryption algorithm for the security association.
The default value is aes.
.It Li ip.ipsec-expire-acquire
How long the kernel should allow key management to dynamically acquire
security associations before re-sending a request.
The default value is 30 seconds.
.It Li ip.ipsec-firstuse
The number of seconds after a security association is first used before
it expires.
If set to less than or equal to zero, the security association will
not expire because of this timer.
The default value is 7200 seconds.
.It Li ip.ipsec-invalid-life
The lifetime of embryonic Security Associations (SAs that key management
daemons have reserved but not fully established yet) in seconds.
If set to less than or equal to zero, embryonic SAs will not expire.
The default value is 60.
.It Li ip.ipsec-pfs
If set to any non-zero value, the kernel will ask the key management
daemons to use Perfect Forward Secrecy when establishing IPsec
Security Associations.
Perfect Forward Secrecy makes IPsec Security Associations
cryptographically distinct from each other, such that breaking the key
for one such SA does not compromise any others.
Requiring PFS for every security association significantly increases the
computational load of
.Xr isakmpd 8
exchanges.
The default value is 1.
.It Li ip.ipsec-soft-allocs
The number of IPsec flows that can use a security association before a
message is sent by the kernel to key management for renegotiation
of the security association.
If set to less than or equal to zero, no message is sent to key
management.
The default value is 0.
.It Li ip.ipsec-soft-bytes
The number of bytes that will be processed by a security association
before a message is sent by the kernel to key management for
renegotiation of the security association.
If set to less than or equal to zero, no message is sent to key
management.
The default value is 0.
.It Li ip.ipsec-soft-firstuse
The number of seconds after a security association is first used
before a message is sent by the kernel to key management for
renegotiation of the security association.
If set to less than or equal to zero, no message is sent to key
management.
The default value is 3600 seconds.
.It Li ip.ipsec-soft-timeout
The number of seconds after a security association is established
before a message is sent by the kernel to key management for
renegotiation of the security association.
If set to less than or equal to zero, no message is sent to key
management.
The default value is 80000 seconds.
.It Li ip.ipsec-timeout
The number of seconds after a security association is established
before it will expire.
If set to less than or equal to zero, the security association will
not expire because of this timer.
The default value is 86400 seconds.
.It Li ip.maxqueue
Fragment flood protection.
Sets the maximum number of unassembled IP fragments in the fragment queue.
.It Li ip.mforwarding
If set to 1, then multicast forwarding is enabled for the host.
The default is 0.
.It Li ip.mtudisc
Returns 1 if Path MTU Discovery is enabled.
.It Li ip.mtudisctimeout
Returns the number of seconds in which a route added by the Path MTU
Discovery engine will time out.
When the route times out, the Path MTU Discovery engine will attempt
to probe a larger path MTU.
.It Li ip.multipath
This variable enables multipath routing for IPv4 addresses.
If set to 0, only the first route selected will be used for a given
destination regardless of how many routes exist in the routing table.
.It Li ip.portfirst
Minimum registered port number for TCP/UDP port allocation.
Registered ports can be used by ordinary user processes
or programs executed by ordinary users.
Cannot be less than 1024 or greater than 49151.
Must be less than ip.portlast.
.It Li ip.porthifirst
Minimum dynamic/private port number for TCP/UDP port allocation.
Dynamic/private ports can be used by ordinary user processes
or programs executed by ordinary users.
Cannot be less than 49152 or greater than 65535.
Must be less than ip.porthilast.
.It Li ip.porthilast
Maximum dynamic/private port number for TCP/UDP port allocation.
Dynamic/private ports can be used by ordinary user processes
or programs executed by ordinary users.
Cannot be less than 49152 or greater than 65535.
Must be greater than ip.porthifirst.
.It Li ip.portlast
Maximum registered port number for TCP/UDP port allocation.
Registered ports can be used by ordinary user processes
or programs executed by ordinary users.
Cannot be less than 1024 or greater than 49151.
Must be greater than ip.portfirst.
.It Li ip.redirect
Returns 1 when
.Tn ICMP
redirects may be sent by the host.
This option is ignored unless the host is routing
.Tn IP
packets,
and should normally be enabled on all systems.
.It Li ip.sourceroute
Returns 1 when forwarding of source-routed packets is enabled for
the host.
As detailed in
.Xr securelevel 7 ,
this variable may not be changed if the securelevel is \*(Gt 0.
.It Li ip.ttl
The maximum time-to-live (hop count) value for an
.Tn IP
packet sourced by
the system.
This value applies to normal transport protocols, not to
.Tn ICMP .
.It Li ipcomp.enable
Enable the IPComp protocol.
See
.Xr ipsecctl 8
for more information.
.It Li ipip.allow
If set to 0, incoming IP-in-IP packets will not be processed.
If set to any other value, processing will occur; furthermore, if set
to 2, no checks for spoofing of loopback addresses will be done.
This is useful only for debugging purposes, and should never be used
in production systems.
.It Li mobileip.allow
If set to 0, incoming MobileIP encapsulated packets (RFC 2004) will not be
processed.
If set to any other value, processing will occur.
.It Li tcp.ackonpush
Returns 1 if TCP segments with the
.Dv TH_PUSH
flag set are being acknowledged immediately, otherwise 0.
.It Li tcp.baddynamic
An array of
.Li in_port_t
is returned specifying the bitmask of
.Tn TCP
ports between 512
and 1023 inclusive that should not be allocated dynamically
by the kernel (i.e., they must be bound specifically by port number).
.It Li tcp.ecn
Returns 1 if Explicit Congestion Notifications for TCP are enabled.
.It Li tcp.ident
A
.Li struct tcp_ident_mapping
specifying a local and foreign endpoint of a
.Tn TCP
socket is filled in with the effective and real UIDs of the process that
owns the socket.
If no such socket exists, then the effective and real UID values are
both set to \-1.
.It Li tcp.keepidle
If the socket option
.Dv SO_KEEPALIVE
has been set on a socket, then this value specifies how much time a
connection needs to be idle before keepalives are sent.
See also tcp.slowhz.
.It Li tcp.keepinittime
Time to keep alive the initial SYN packet of a TCP handshake.
.It Li tcp.keepintvl
Time after a keepalive probe is sent until, in the absence of any response,
another probe is sent.
See also tcp.slowhz.
.It Li tcp.mssdflt
The maximum segment size that is used as default for non-local connections.
The default value is 512.
.It Li tcp.reasslimit
The maximum number of out-of-order
.Tn TCP
segments the system will store for reassembly.
.It Li tcp.recvspace
Returns the default
.Tn TCP
receive buffer size.
.It Li tcp.rfc1323
Returns 1 if RFC 1323 extensions to
.Tn TCP
are enabled.
.It Li tcp.rfc3390
Returns 1 if the
.Tn TCP
Initial Window is increased, as specified in RFC 3390.
.It Li tcp.rstppslimit
This variable specifies the maximum number of outgoing TCP RST packets
per second.
TCP RST packets exceeding this value are subject to rate limitation
and will not go out from the node.
A negative value disables rate limitation.
.It Li tcp.sack
Returns 1 if RFC 2018 Selective Acknowledgements are enabled.
.It Li tcp.sendspace
Returns the default
.Tn TCP
send buffer size.
.It Li tcp.slowhz
The units for tcp.keepidle and tcp.keepintvl; those variables are in ticks
of a clock that ticks tcp.slowhz times per second.
(That is, their values must be divided by the tcp.slowhz value to get times
in seconds.)
.It Li tcp.synbucketlimit
The maximum number of entries allowed per hash bucket in the TCP SYN cache.
.It Li tcp.syncachelimit
The maximum number of entries allowed in the TCP SYN cache.
.It Li udp.baddynamic
Analogous to
.Li tcp.baddynamic
but for
.Tn UDP
sockets.
.It Li udp.checksum
Returns 1 when
.Tn UDP
checksums are being computed and checked.
Disabling
.Tn UDP
checksums is strongly discouraged.
.It Li udp.recvspace
Returns the default
.Tn UDP
receive buffer size.
.It Li udp.sendspace
Returns the default
.Tn UDP
send buffer size.
.El
.It Dv PF_INET6
Get or set various global information about IPv6
.Pq Internet Protocol version 6 .
The third level name is the protocol.
The fourth level name is the variable name.
The currently defined protocols and names are:
.Bl -column "Protocol name" "Variable nameXX" "integer" "yes" -offset indent
.It Sy Protocol name	Variable name	Type	Changeable
.It icmp6	errppslimit	integer	yes
.It icmp6	mtudisc_hiwat	integer	yes
.It icmp6	mtudisc_lowat	integer	yes
.It icmp6	nd6_debug	integer	yes
.It icmp6	nd6_delay	integer	yes
.It icmp6	nd6_maxnudhint	integer	yes
.It icmp6	nd6_mmaxtries	integer	yes
.It icmp6	nd6_prune	integer	yes
.It icmp6	nd6_umaxtries	integer	yes
.It icmp6	nd6_useloopback	integer	yes
.It icmp6	nodeinfo	integer	yes
.It icmp6	rediraccept	integer	yes
.It icmp6	redirtimeout	integer	yes
.It ip6	accept_rtadv	integer	yes
.It ip6	auto_flowlabel	integer	yes
.It ip6	dad_count	integer	yes
.It ip6	defmcasthlim	integer	yes
.It ip6	forwarding	integer	yes
.It ip6	hdrnestlimit	integer	yes
.It ip6	hlim	integer	yes
.It ip6	kame_version	string	no
.It ip6	keepfaith	integer	yes
.It ip6	log_interval	integer	yes
.It ip6	maxfragpackets	integer	yes
.It ip6	maxfrags	integer	yes
.It ip6	mforwarding	integer	yes
.It ip6	multicast_mtudisc	integer	yes
.It ip6	multipath	integer	yes
.It ip6	redirect	integer	yes
.It ip6	rr_prune	integer	yes
.It ip6	use_deprecated	integer	yes
.It ip6	v6only	integer	no
.El
.Pp
The variables are as follows:
.Pp
.Bl -tag -width "123456" -compact
.It Li icmp6.errppslimit
This variable specifies the maximum number of outgoing ICMPv6 error messages
per second.
ICMPv6 error messages exceeding this value are subject to rate limitation
and will not go out from the node.
A negative value will disable the rate limitation.
.Pp
.It Li icmp6.mtudisc_hiwat
.It Li icmp6.mtudisc_lowat
These variables define the maximum number of routing table entries
created due to path MTU discovery
.Pq preventing denial-of-service attacks with ICMPv6 too big messages .
After IPv6 path MTU discovery happens, path MTU information is kept in
the routing table.
If the number of routing table entries exceeds this value,
the kernel will not attempt to keep the path MTU information.
.Li icmp6.mtudisc_hiwat
is used when we have verified ICMPv6 too big messages.
.Li icmp6.mtudisc_lowat
is used when we have unverified ICMPv6 too big messages.
Verification is performed by using address/port pairs kept in connected PCBs.
A negative value disables the upper limit.
.Pp
.It Li icmp6.nd6_debug
If set to non-zero, IPv6 neighbor discovery will generate debugging
messages.
The debug output is useful for diagnosing IPv6 interoperability issues.
The flag must be set to 0 for normal operation.
.Pp
.It Li icmp6.nd6_delay
This variable specifies the
.Dv DELAY_FIRST_PROBE_TIME
timing constant in IPv6 neighbor discovery specification
.Pq RFC 2461 ,
in seconds.
.Pp
.It Li icmp6.nd6_maxnudhint
IPv6 neighbor discovery permits upper layer protocols to supply reachability
hints, to avoid unnecessary neighbor discovery exchanges.
This variable defines the number of consecutive hints the neighbor discovery
layer will take.
For example, by setting the variable to 3, neighbor discovery will take
a maximum of 3 consecutive hints.
After receiving 3 hints, the neighbor discovery layer will instead perform
the normal neighbor discovery process.
.Pp
.It Li icmp6.nd6_mmaxtries
This variable specifies the
.Dv MAX_MULTICAST_SOLICIT
constant in IPv6 neighbor discovery specification
.Pq RFC 2461 .
.Pp
.It Li icmp6.nd6_prune
This variable specifies the interval between IPv6 neighbor cache babysitting
in seconds.
.Pp
.It Li icmp6.nd6_umaxtries
This variable specifies the
.Dv MAX_UNICAST_SOLICIT
constant in IPv6 neighbor discovery specification
.Pq RFC 2461 .
.Pp
.It Li icmp6.nd6_useloopback
If set to non-zero, IPv6 will use the loopback interface for local traffic.
.Pp
.It Li icmp6.nodeinfo
This variable enables responses to ICMPv6 node information queries.
If set to 0, responses will not be generated for
ICMPv6 node information queries.
Since node information queries can have a security impact, it is
possible to fine tune which responses should be answered.
Two separate bits can be set:
.Bl -tag -width "123" -offset indent
.It 1
Respond to ICMPv6 FQDN queries, e.g.\&
.Li ping6 -w .
.It 2
Respond to ICMPv6 node addresses queries, e.g.\&
.Li ping6 -a .
.El
.Pp
.It Li icmp6.rediraccept
If set to non-zero, the host will accept ICMPv6 redirect packets.
Note that IPv6 routers will never accept ICMPv6 redirect packets,
so the variable is only meaningful on IPv6 hosts, not on routers.
.Pp
.It Li icmp6.redirtimeout
The variable specifies the lifetime of routing entries generated by
incoming ICMPv6 redirects.
.Pp
.It Li ip6.accept_rtadv
If set to non-zero, the node will accept ICMPv6 router advertisement packets
and autoconfigures address prefixes and default routers.
The node must be a host
.Pq not a router
for the option to be meaningful (see
.Li ip6.forwarding ) .
.Pp
.It Li ip6.auto_flowlabel
On connected transport protocol packets,
fill the IPv6 flowlabel field to help intermediate routers identify
packet flows.
.Pp
.It Li ip6.dad_count
This variable configures the number of IPv6 DAD
.Pq duplicated address detection
probe packets.
These packets are generated when IPv6 interfaces are first brought up.
.Pp
.It Li ip6.defmcasthlim
The default hop limit value for an IPv6 multicast packet sourced by the node.
This value applies to all the transport protocols on top of IPv6.
Methods for overriding this value are documented in
.Xr ip6 4 .
.Pp
.It Li ip6.forwarding
Returns 1 when IPv6 forwarding is enabled for the node,
meaning that the node is acting as a router.
Returns 0 when IPv6 forwarding is disabled for the node,
meaning that the node is acting as a host.
Note that IPv6 defines node behavior for the
.Dq router
and
.Dq host
cases quite differently, and changing this variable during operation
may cause serious trouble.
Hence, this variable should only be set at bootstrap time.
.Pp
.It Li ip6.hdrnestlimit
The number of IPv6 extension headers permitted on incoming IPv6 packets.
If set to 0, the node will accept as many extension headers as possible.
.Pp
.It Li ip6.hlim
The default hop limit value for an IPv6 unicast packet sourced by the node.
This value applies to all the transport protocols on top of IPv6.
Methods for overriding this value are documented in
.Xr ip6 4 .
.Pp
.It Li ip6.kame_version
This string identifies the version of the KAME IPv6 stack implemented
in the kernel.
.Pp
.It Li ip6.keepfaith
If set to non-zero, enables the
.Dq FAITH
TCP relay IPv6-to-IPv4 translator code in the kernel.
Refer to
.Xr faith 4
and
.Xr faithd 8
for more details.
.Pp
.It Li ip6.log_interval
This variable permits adjusting the amount of logs generated by the
IPv6 packet forwarding engine.
The value indicates the number of
seconds of interval which must elapse between log output.
.Pp
.It Li ip6.maxfragpackets
The maximum number of fragmented packets the node will accept.
0 means that the node will not accept any fragmented packets.
\-1 means that the node will accept as many fragmented packets as it receives.
The flag is provided basically for avoiding possible DoS attacks.
.Pp
.It Li ip6.maxfrags
The maximum number of fragments the node will accept.
0 means that the node will not accept any fragments.
\-1 means that the node will accept as many fragments as it receives.
The flag is provided basically for avoiding possible DoS attacks.
.Pp
.It Li ip6.mforwarding
If set to 1, then multicast forwarding is enabled for the host.
The default is 0.
.Pp
.It Li ip6.multicast_mtudisc
This variable controls generation of ICMPv6 Too Big messages
when the machine is performing as an IPv6 multicast router.
If set to 1, an ICMPv6 Too Big message will be generated for multicast packets
which were too big to be forwarded.
If set to 0, the ICMPv6 Too Big message will be suppressed.
.Pp
.It Li ip6.multipath
This variable enables multipath routing for IPv6 addresses.
If set to 0, only the first route selected will be used for a given
destination regardless of how many routes exist in the routing table.
.Pp
.It Li ip6.redirect
Returns 1 when ICMPv6 redirects may be sent by the node.
This option is ignored unless the node is routing IP packets,
and should normally be enabled on all systems.
.Pp
.It Li ip6.rr_prune
This variable specifies the interval between IPv6 router renumbering prefix
babysitting in seconds.
.Pp
.It Li ip6.use_deprecated
This variable controls the use of deprecated addresses, specified in
RFC 2462 5.5.4.
.Pp
.It Li ip6.v6only
The variable specifies the initial value for the
.Dv IPV6_V6ONLY
socket option for an
.Dv AF_INET6
socket.
It is always 1 for
.Ox .
.El
.Pp
We reuse
.Li net.inet.tcp
and
.Li net.inet.udp
for
.Tn TCP/UDP
over
.Tn IPv6 .
.El
.Ss CTL_USER
The string and integer information available for the
.Dv CTL_USER
level is detailed below.
The changeable column shows whether a process with appropriate
privileges may change the value.
.Bl -column "USER_COLL_WEIGHTS_MAXXXX" "integerXXX" -offset indent
.It Sy Second level name	Type	Changeable
.It Dv USER_BC_BASE_MAX No "	integer	no"
.It Dv USER_BC_DIM_MAX No "	integer	no"
.It Dv USER_BC_SCALE_MAX No "	integer	no"
.It Dv USER_BC_STRING_MAX No "	integer	no"
.It Dv USER_COLL_WEIGHTS_MAX No "	integer	no"
.It Dv USER_CS_PATH No "	string	no"
.It Dv USER_EXPR_NEST_MAX No "	integer	no"
.It Dv USER_LINE_MAX No "	integer	no"
.It Dv USER_POSIX2_C_BIND No "	integer	no"
.It Dv USER_POSIX2_C_DEV No "	integer	no"
.It Dv USER_POSIX2_CHAR_TERM No "	integer	no"
.It Dv USER_POSIX2_FORT_DEV No "	integer	no"
.It Dv USER_POSIX2_FORT_RUN No "	integer	no"
.It Dv USER_POSIX2_LOCALEDEF No "	integer	no"
.It Dv USER_POSIX2_SW_DEV No "	integer	no"
.It Dv USER_POSIX2_UPE No "	integer	no"
.It Dv USER_POSIX2_VERSION No "	integer	no"
.It Dv USER_RE_DUP_MAX No "	integer	no"
.It Dv USER_STREAM_MAX No "	integer	no"
.It Dv USER_TZNAME_MAX No "	integer	no"
.El
.Bl -tag -width "123456"
.Pp
.It Dv USER_BC_BASE_MAX
The maximum ibase/obase values in the
.Xr bc 1
utility.
.It Dv USER_BC_DIM_MAX
The maximum array size in the
.Xr bc 1
utility.
.It Dv USER_BC_SCALE_MAX
The maximum scale value in the
.Xr bc 1
utility.
.It Dv USER_BC_STRING_MAX
The maximum string length in the
.Xr bc 1
utility.
.It Dv USER_COLL_WEIGHTS_MAX
The maximum number of weights that can be assigned to any entry of
the
.Dv LC_COLLATE
order keyword in the locale definition file.
.It Dv USER_CS_PATH
Return a value for the
.Ev PATH
environment variable that finds all the standard utilities.
.It Dv USER_EXPR_NEST_MAX
The maximum number of expressions that can be nested within
parentheses by the
.Xr expr 1
utility.
.It Dv USER_LINE_MAX
The maximum length in bytes of a text-processing utility's input
line.
.It Dv USER_POSIX2_C_BIND
Return 1 if the system's C-language development facilities support the
C-Language Bindings Option, otherwise 0.
.It Dv USER_POSIX2_C_DEV
Return 1 if the system supports the C-Language Development Utilities Option,
otherwise 0.
.It Dv USER_POSIX2_CHAR_TERM
Return 1 if the system supports at least one terminal type capable of
all operations described in POSIX 1003.2, otherwise 0.
.It Dv USER_POSIX2_FORT_DEV
Return 1 if the system supports the FORTRAN Development Utilities Option,
otherwise 0.
.It Dv USER_POSIX2_FORT_RUN
Return 1 if the system supports the FORTRAN Runtime Utilities Option,
otherwise 0.
.It Dv USER_POSIX2_LOCALEDEF
Return 1 if the system supports the creation of locales, otherwise 0.
.It Dv USER_POSIX2_SW_DEV
Return 1 if the system supports the Software Development Utilities Option,
otherwise 0.
.It Dv USER_POSIX2_UPE
Return 1 if the system supports the User Portability Utilities Option,
otherwise 0.
.It Dv USER_POSIX2_VERSION
The version of POSIX 1003.2 with which the system attempts to comply.
.It Dv USER_RE_DUP_MAX
The maximum number of repeated occurrences of a regular expression
permitted when using interval notation.
.It Dv USER_STREAM_MAX
The maximum number of streams that a process may have open
at any one time.
.It Dv USER_TZNAME_MAX
The minimum maximum number of types supported for the name of a
time zone.
.El
.Ss CTL_VFS
The string and integer information available for the
.Dv CTL_VFS
level is detailed below.
The changeable column shows whether a process with appropriate
privileges may change the value.
.Bl -column "Second level nameXXXXXX" "struct loadavgXXX" -offset indent
.It Sy Second level name	Type	Changeable
.It Dv VFS_GENERIC No "	VFS generic info	no"
.It Dv filesystem # No "	filesystem info	no"
.El
.Bl -tag -width "123456"
.It Dv VFS_GENERIC
This second level identifier requests generic information about the
VFS layer.
Within it, the following third level identifiers exist:
.Bl -column "Third level nameXXXXXX" "struct loadavgXXX" -offset indent
.It Sy Third level name	Type	Changeable
.It Dv VFS_CONF No "	struct vfsconf	no"
.It Dv VFS_MAXTYPENUM No "	int	no"
.El
.It filesystem #
After finding the filesystem dependent
.Va vfc_typenum
using
.Dv VFS_GENERIC
with
.Dv VFS_CONF ,
it is possible to access filesystem dependent information.
.Pp
Some filesystems may contain settings.
.Bl -tag -width "123"
.It FFS
.Bl -column "Third level nameXXXX" "FFS_SD_DIRECT_BLK " -offset ind
.It Sy Third level name	Type	Changeable
.It Dv FFS_ASYNCFREE No "	integer	yes"
.It Dv FFS_CLUSTERREAD No "	integer	yes"
.It Dv FFS_CLUSTERWRITE No "	integer	yes"
.It Dv FFS_DIRHASH_DIRSIZE No "	integer	yes"
.It Dv FFS_DIRHASH_MAXMEM No "	integer	yes"
.It Dv FFS_DIRHASH_MEM No "	integer	no"
.It Dv FFS_MAXSOFTDEPS No "	integer	yes"
.It Dv FFS_REALLOCBLOCKS No "	integer	yes"
.It Dv FFS_SD_BLK_LIMIT_HIT No "	integer	yes"
.It Dv FFS_SD_BLK_LIMIT_PUSH No "	integer	yes"
.It Dv FFS_SD_DIR_ENTRY No "	integer	yes"
.It Dv FFS_SD_DIRECT_BLK_PTRS No "	integer	yes"
.It Dv FFS_SD_INDR_BLK_PTRS No "	integer	yes"
.It Dv FFS_SD_INO_LIMIT_HIT No "	integer	yes"
.It Dv FFS_SD_INO_LIMIT_PUSH No "	integer	yes"
.It Dv FFS_SD_INODE_BITMAP No "	integer	yes"
.It Dv FFS_SD_SYNC_LIMIT_HIT No "	integer	yes"
.It Dv FFS_SD_TICKDELAY No "	integer	yes"
.It Dv FFS_SD_WORKLIST_PUSH No "	integer	yes"
.El
.Bl -tag -width "123456"
.It Dv FFS_CLUSTERREAD
Enable combining multiple reads into one request to improve performance.
.It Dv FFS_CLUSTERWRITE
Enable combining multiple writes into one request.
.It Dv FFS_DIRHASH_DIRSIZE
The minimum size of a directory, in bytes, before it is considered for hashing.
.It Dv FFS_DIRHASH_MAXMEM
The maximum amount of memory, in bytes, to be used for storing directory
hashes.
.It Dv FFS_DIRHASH_MEM
The amount of memory currently used by all directory hashes.
.It Dv FFS_REALLOCBLOCKS
When enabled, the kernel will attempt to relocate growing files so that they
are contiguous on disk, reducing fragmentation.
.El
.It NFS
.Bl -column "Third level nameXXX" "struct loadavgXXX" -offset ind
.It Sy Third level name	Type	Changeable
.It Dv NFS_NFSSTATS No "	struct nfsstats	yes"
.It Dv NFS_NIOTHREADS No "	int	yes"
.El
.Bl -tag -width Ds
.It Dv NFS_NIOTHREADS
The number of NFS I/O kernel threads.
Should be set high enough for the server to handle
the maximum level of concurrency from its clients,
typically four to six.
.El
.El
.El
.Ss CTL_VM
The string and integer information available for the
.Dv CTL_VM
level is detailed below.
The changeable column shows whether a process with appropriate
privileges may change the value.
.Bl -column "Second level nameXXXXXX" "struct loadavgXXX" -offset indent
.It Sy Second level name	Type	Changeable
.It Dv VM_ANONMIN No "	integer	yes"
.It Dv VM_LOADAVG No "	struct loadavg	no"
.It Dv VM_MAXSLP No "	integer	no"
.It Dv VM_METER No "	struct vmtotal	no"
.It Dv VM_NKMEMPAGES No "	integer	no"
.It Dv VM_PSSTRINGS No "	struct psstrings	no"
.It Dv VM_SWAPENCRYPT No "	swap encrypt values	yes"
.It Dv VM_USPACE No "	integer	no"
.It Dv VM_UVMEXP No "	struct uvmexp	no"
.It Dv VM_VNODEMIN No "	integer	yes"
.It Dv VM_VTEXTMIN No "	integer	yes"
.El
.Bl -tag -width "123456"
.It Dv VM_ANONMIN
Percentage of physical memory available for
pages which contain anonymous mapping.
.It Dv VM_LOADAVG
Return the load average history.
The returned data consists of a
.Li struct loadavg .
.It Dv VM_MAXSLP
The time for a process to be blocked before being swappable,
in seconds.
.It Dv VM_METER
Return the system wide virtual memory statistics.
The returned data consists of a
.Li struct vmtotal .
.It Dv VM_NKMEMPAGES
Number of pages in kmem_map.
.It Dv VM_PSSTRINGS
Returns the address of the process
.Li struct ps_strings .
The
.Xr ps 1
program uses it to locate the argument and environment strings.
.It Dv VM_SWAPENCRYPT
Contains statistics about swap encryption.
The string and integer information available for the third level is
detailed below.
.Bl -column "Third level nameXXXXXX" "struct loadavgXXX" -offset indent
.It Sy Third level name	Type	Changeable
.It Dv SWPENC_CREATED No "	integer	no"
.It Dv SWPENC_DELETED No "	integer	no"
.It Dv SWPENC_ENABLE No "	integer	yes"
.El
.Bl -tag -width "123456"
.It Dv SWPENC_CREATED
The number of encryption keys that have been randomly created.
The swap partition is divided into sections of normally 512KB.
Each section has its own encryption key.
.It Dv SWPENC_DELETED
The number of encryption keys that have been deleted, thus effectively
erasing the data that has been encrypted with them.
Encryption keys are deleted when their reference counter reaches zero.
.It Dv SWPENC_ENABLE
Set to 1 to enable swap encryption for all processes.
A 0 disables swap encryption.
Pages still on swap receive a grandfather clause.
Turning this option on does not affect legacy swap data already on the disk,
but all newly written data will be encrypted.
When swap encryption is turned on, automatic
.Xr crash 8
dumps are disabled.
.El
.It Dv VM_USPACE
The number of bytes allocated for each kernel stack.
.It Dv VM_UVMEXP
Contains statistics about the UVM memory management system.
.It Dv VM_VNODEMIN
Percentage of physical memory available for
pages which contain cached file data.
.It Dv VM_VTEXTMIN
Percentage of physical memory available for
pages which contain cached executable data.
.El
.Sh RETURN VALUES
If the call to
.Fn sysctl
is unsuccessful, \-1 is returned and
.Va errno
is set appropriately.
.Sh FILES
.Bl -tag -width "uvm/uvmXswapXencrypt.h  " -compact
.It Aq Pa sys/sysctl.h
definitions for top level identifiers, second level kernel and hardware
identifiers, and user level identifiers
.It Aq Pa sys/socket.h
definitions for second level network identifiers
.It Aq Pa sys/gmon.h
definitions for third level profiling identifiers
.It Aq Pa ufs/ffs/ffs_extern.h
definitions for third level virtual file system identifiers
.Pq ffs
.It Aq Pa nfs/nfs.h
definitions for third level virtual file system identifiers
.Pq nfs
.It Aq Pa uvm/uvm_param.h
definitions for second level virtual memory identifiers
.It Aq Pa uvm/uvm_swap_encrypt.h
definitions for third level virtual memory identifiers
.It Aq Pa netinet/in.h
definitions for third level IPv4/v6 identifiers and
fourth level
.Tn IP
and
.Tn IPv6
identifiers
.It Aq Pa netinet/icmp_var.h
definitions for fourth level
.Tn ICMP
identifiers
.It Aq Pa netinet/icmp6.h
definitions for fourth level
.Tn ICMPv6
identifiers
.It Aq Pa netinet/tcp_var.h
definitions for fourth level
.Tn TCP
identifiers
.It Aq Pa netinet/udp_var.h
definitions for fourth level
.Tn UDP
identifiers
.El
.Sh ERRORS
The following errors may be reported:
.Bl -tag -width Er
.It Bq Er EFAULT
The buffer
.Fa name ,
.Fa oldp ,
.Fa newp ,
or length pointer
.Fa oldlenp
contains an invalid address.
.It Bq Er EINVAL
The
.Fa name
array is less than two or greater than
.Dv CTL_MAXNAME .
.It Bq Er EINVAL
A non-null
.Fa newp
pointer is given and its specified length in
.Fa newlen
is too large or too small.
.It Bq Er ENOMEM
The length pointed to by
.Fa oldlenp
is too short to hold the requested value.
.It Bq Er ENOTDIR
The
.Fa name
array specifies an intermediate rather than terminal name.
.It Bq Er EOPNOTSUPP
The
.Fa name
array specifies a value that is unknown.
.It Bq Er EPERM
An attempt is made to set a read-only value.
.It Bq Er EPERM
A process without appropriate privileges attempts to set a value.
.It Bq Er EPERM
An attempt to change a value protected by the current kernel security
level is made.
.It Bq Er ESRCH
No process could be found which corresponds to the given process ID.
.El
.Sh SEE ALSO
.Xr pathconf 2 ,
.Xr sysconf 3 ,
.Xr ddb 4 ,
.Xr sysctl.conf 5 ,
.Xr securelevel 7 ,
.Xr sysctl 8
.Sh HISTORY
The
.Fn sysctl
function first appeared in
.Bx 4.4 .
