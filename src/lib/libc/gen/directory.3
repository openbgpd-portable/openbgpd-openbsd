.\"	$OpenBSD: directory.3,v 1.19 2009/11/23 23:08:35 mk Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: November 23 2009 $
.Dt DIRECTORY 3
.Os
.Sh NAME
.Nm opendir ,
.Nm readdir ,
.Nm readdir_r ,
.Nm telldir ,
.Nm seekdir ,
.Nm rewinddir ,
.Nm closedir ,
.Nm dirfd
.Nd directory operations
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <dirent.h>
.Ft DIR *
.Fn opendir "const char *filename"
.Ft struct dirent *
.Fn readdir "DIR *dirp"
.Ft int
.Fn readdir_r "DIR *dirp" "struct dirent *entry" "struct dirent **result"
.Ft long
.Fn telldir "const DIR *dirp"
.Ft void
.Fn seekdir "DIR *dirp" "long loc"
.Ft void
.Fn rewinddir "DIR *dirp"
.Ft int
.Fn closedir "DIR *dirp"
.Ft int
.Fn dirfd "DIR *dirp"
.Sh DESCRIPTION
The
.Fn opendir
function opens the directory named by
.Fa filename ,
associates a directory stream with it, and returns a pointer to be used
to identify the directory stream in subsequent operations.
A null pointer is returned if
.Fa filename
cannot be accessed, or if
.Xr malloc 3
cannot allocate enough memory to hold the entire structure.
.Pp
The
.Fn readdir
function returns a pointer to the next directory entry in the named
directory stream
.Fa dirp .
It returns
.Dv NULL
upon reaching the end of the directory or detecting an invalid
.Fn seekdir
operation.
.Pp
The
.Fn readdir_r
function (much like
.Fn readdir )
initializes the
.Li dirent
structure referenced by
.Fa entry
to represent the next directory entry in the named directory stream
.Fa dirp ,
and stores a pointer to this structure at the location referenced by
.Fa result .
The storage pointed to by
.Fa entry
must be large enough for a dirent with a
.Fa d_name
array member containing at least
.Dv NAME_MAX
plus one elements.
On successful return, the pointer returned at
.Fa "*result"
will have the same value as the argument
.Fa entry .
Upon reaching the end of the directory stream, this pointer shall have the value
.Dv NULL .
.Pp
The
.Fn telldir
function returns the current location associated with the named
directory stream
.Fa dirp .
.Pp
The
.Fn seekdir
function sets the position of the next
.Fn readdir
operation on the named directory stream
.Fa dirp .
The new position reverts to the one associated with the
directory stream when the
.Fn telldir
operation was performed.
Values returned by
.Fn telldir
are good only for the lifetime of the
.Dv DIR
pointer,
.Fa dirp ,
from which they are derived.
If the directory is closed and then reopened, the
.Fn telldir
value may be invalidated due to undetected directory compaction.
.Pp
The
.Fn rewinddir
function resets the position of the named directory stream
.Fa dirp
to the beginning of the directory.
.Pp
The
.Fn closedir
function closes the named directory stream and frees the structure
associated with the
.Fa dirp
pointer, returning 0 on success.
On failure, \-1 is returned and the global variable
.Va errno
is set to indicate the error.
.Pp
The
.Fn dirfd
function returns the integer file descriptor associated with the named
directory stream
.Fa dirp
(see
.Xr open 2 ) .
.Sh EXAMPLES
Sample code which searches a directory for entry
.Dq name
is:
.Bd -literal -offset indent
len = strlen(name);
dirp = opendir(".");
if (dirp) {
	while ((dp = readdir(dirp)) != NULL)
		if (dp->d_namlen == len &&
		    !strcmp(dp->d_name, name)) {
			(void)closedir(dirp);
			return (FOUND);
		}
	(void)closedir(dirp);
}
return (NOT_FOUND);
.Ed
.Sh SEE ALSO
.Xr close 2 ,
.Xr getdirentries 2 ,
.Xr lseek 2 ,
.Xr open 2 ,
.Xr dir 5
.Sh HISTORY
The
.Fn opendir ,
.Fn readdir ,
.Fn telldir ,
.Fn seekdir ,
.Fn rewinddir ,
.Fn closedir ,
and
.Fn dirfd
functions appeared in
.Bx 4.2 .
