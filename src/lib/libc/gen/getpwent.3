.\"	$OpenBSD: getpwent.3,v 1.22 2008/06/24 14:27:24 deraadt Exp $
.\"
.\" Copyright (c) 1988, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: June 24 2008 $
.Dt GETPWENT 3
.Os
.Sh NAME
.Nm getpwent ,
.Nm getpwnam ,
.Nm getpwuid ,
.Nm getpwnam_r ,
.Nm getpwuid_r ,
.Nm setpassent ,
.Nm setpwent ,
.Nm endpwent
.Nd password database operations
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <pwd.h>
.Ft struct passwd *
.Fn getpwent void
.Ft struct passwd *
.Fn getpwnam "const char *login"
.Ft struct passwd *
.Fn getpwuid "uid_t uid"
.Ft int
.Fn getpwnam_r "const char *login" "struct passwd *pwstore" "char *buf" "size_t buflen" "struct passwd **result"
.Ft int
.Fn getpwuid_r "uid_t uid" "struct passwd *pwstore" "char *buf" "size_t buflen" "struct passwd **result"
.Ft int
.Fn setpassent "int stayopen"
.Ft void
.Fn setpwent void
.Ft void
.Fn endpwent void
.Sh DESCRIPTION
These functions operate on the password database file which is described in
.Xr passwd 5 .
Each entry in the database is defined by the structure
.Li struct passwd
found in the include file
.Aq Pa pwd.h :
.Bd -literal -offset indent
struct passwd {
	char	*pw_name;	/* user name */
	char	*pw_passwd;	/* encrypted password */
	uid_t	pw_uid;		/* user uid */
	gid_t	pw_gid;		/* user gid */
	time_t	pw_change;	/* password change time */
	char	*pw_class;	/* user access class */
	char	*pw_gecos;	/* Honeywell login info */
	char	*pw_dir;	/* home directory */
	char	*pw_shell;	/* default shell */
	time_t	pw_expire;	/* account expiration */
};
.Ed
.Pp
The functions
.Fn getpwnam
and
.Fn getpwuid
search the password database for the given login name or user ID,
respectively, always returning the first one encountered.
.Pp
The re-entrant functions
.Fn getpwnam_r
and
.Fn getpwuid_r
search the password database for the given login name or user ID,
respectively, always returning the first one encountered.
The various strings associated with the result are stored in
.Va buf ,
and
.Va pwstore
is updated to point at those strings.
.Pp
.Fn getpwent
sequentially reads the password database and is intended for programs
that wish to process the complete list of users.
.Pp
.Fn setpassent
accomplishes two purposes.
First, it causes
.Fn getpwent
to
.Dq rewind
to the beginning of the database.
Additionally, if
.Fa stayopen
is non-zero, file descriptors are left open, significantly speeding
up subsequent accesses for all of the routines.
(This latter functionality is unnecessary for
.Fn getpwent
as it doesn't close its file descriptors by default.)
.Pp
It is dangerous for long-running programs to keep the file descriptors
open as the database will become out of date if it is updated while the
program is running.
.Pp
.Fn setpwent
is equivalent to
.Fn setpassent
with an argument of zero.
.Pp
The
.Fn endpwent
function closes any open files.
.Pp
These routines have been written to
.Dq shadow
the password file, i.e.,
allow only certain programs to have access to the encrypted password.
If the process which calls them has an effective UID of 0 or has the
.Dq _shadow
group in its group vector, the encrypted password will be returned, otherwise,
the password field of the returned structure will point to the string
.Ql * .
.Sh RETURN VALUES
The functions
.Fn getpwent ,
.Fn getpwnam ,
and
.Fn getpwuid
return a valid pointer to a passwd structure on success
or a null pointer if end-of-file is reached or an error occurs.
.Pp
The functions
.Fn getpwnam_r
and
.Fn getpwuid_r
update
.Va result
to point to
.Va pwstore
and then return 0 on success.
.Pp
The
.Fn setpassent
function returns 0 on failure or 1 on success.
The
.Fn endpwent
and
.Fn setpwent
functions have no return value.
.Sh FILES
.Bl -tag -width /etc/master.passwd -compact
.It Pa /etc/pwd.db
insecure password database file
.It Pa /etc/spwd.db
secure password database file
.It Pa /etc/master.passwd
current password file
.It Pa /etc/passwd
a Version 7 format password file
.El
.Sh SEE ALSO
.Xr getlogin 2 ,
.Xr getgrent 3 ,
.Xr getgrouplist 3 ,
.Xr pw_dup 3 ,
.Xr passwd 5 ,
.Xr pwd_mkdb 8 ,
.Xr vipw 8
.Sh HISTORY
The
.Fn getpwent ,
.Fn getpwnam ,
.Fn getpwuid ,
.Fn setpwent ,
and
.Fn endpwent
functions appeared in
.At v7 .
The
.Fn setpassent
function appeared in
.Bx 4.3 Reno .
.Pp
The historic function
.Xr setpwfile 3 ,
which allowed the specification of alternate password databases,
has been deprecated and is no longer available.
.Sh BUGS
The functions
.Fn getpwent ,
.Fn getpwnam ,
and
.Fn getpwuid
leave their results in an internal static object and return
a pointer to that object.
Subsequent calls to any of these functions will modify the same object.
.Pp
The routines
.Fn getpwent ,
.Fn endpwent ,
.Fn setpassent ,
and
.Fn setpwent
are fairly useless in a networked environment and should be
avoided, if possible.
